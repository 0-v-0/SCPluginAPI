using System;
using System.IO;
using Engine;
using Engine.Graphics;
using Engine.Content;

namespace Game
{
	public class TG
	{
		private SubsystemTerrain m_subsystemTerrain;
		public byte[] c = new byte[]{3,4,5,21,26,66,67,68,72,73};
		private byte[,,] building1 = new byte[10,8,15]{
			{
				{3,4,5,21,26,66,67,68,72,73,3,4,5,21,26},
				{3,4,5,21,26,66,67,68,72,73,3,4,5,21,26},
				{3,4,5,21,26,66,67,68,72,73,3,4,5,21,26},
				{3,4,5,21,26,66,67,68,72,73,3,4,5,21,26},
				{3,4,5,21,26,66,67,68,72,73,3,4,5,21,26},
				{3,4,5,21,26,66,67,68,72,73,3,4,5,21,26},
				{3,4,5,21,26,66,67,68,72,73,3,4,5,21,26},
				{3,4,5,21,26,66,67,68,72,73,3,4,5,21,26},
			},
			{
				{3,4,5,21,26,66,67,68,72,73,3,4,5,21,26},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
				{68,67,66,26,21,5,4,3,66,26,21,5,4,3,73},
			},
			{
				{4,3,21,5,66,26,68,67,73,72,4,3,21,5,66},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
				{67,68,26,66,5,21,3,4,26,66,5,21,3,4,72},
			},
			{
				{5,21,3,4,67,68,26,66,3,4,72,73,26,66,5},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
				{66,26,68,67,4,3,21,5,21,5,66,26,73,72,4},
			},
			{
				{21,5,4,3,68,67,66,26,4,3,73,72,66,26,21},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
				{26,66,67,68,3,4,5,21,5,21,26,66,72,73,3},
			},
			{
				{26,66,67,68,3,4,5,21,5,21,26,66,72,73,3},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
				{21,5,4,3,68,67,66,26,4,3,73,72,66,26,21},
			},
			{
				{66,26,68,67,4,3,21,5,21,5,66,26,73,72,4},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
				{5,21,3,4,67,68,26,66,3,4,72,73,26,66,5},
			},
			{
				{67,68,26,66,5,21,3,4,26,66,5,21,3,4,72},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
				{4,3,21,5,66,26,68,67,73,72,4,3,21,5,66},
			},
			{
				{68,67,66,26,21,5,4,3,66,26,21,5,4,3,73},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
				{3,4,5,21,26,66,67,68,72,73,3,4,5,21,26},
			},
			{
				{72,73,3,4,5,21,26,66,3,4,5,21,26,66,67},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
				{66,26,21,5,4,3,73,72,68,67,66,26,21,5,4},
			},
		};
		
	private byte[,,] building2 = new byte[9,8,15]{
		{
			{18,18,18,15,44,60,15,15,18,18,18,18,18,15,44},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
			{15,15,60,44,15,18,18,18,60,44,15,18,18,18,18},
		},
		{
			{18,18,15,18,60,44,15,15,18,18,18,18,15,18,60},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
			{15,15,44,60,18,15,18,18,44,60,18,15,18,18,18},
		},
		{
			{18,15,18,18,15,15,44,60,18,18,18,18,44,60,18},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
			{60,44,15,15,18,18,15,18,15,18,60,44,18,18,18},
		},
		{
			{15,18,18,18,15,15,60,44,18,18,18,18,60,44,15},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
			{44,60,15,15,18,18,18,15,18,15,44,60,18,18,18},
		},
		{
			{44,60,15,15,18,18,18,15,18,15,44,60,18,18,18},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
			{15,18,18,18,15,15,60,44,18,18,18,18,60,44,15},
		},
		{
			{60,44,15,15,18,18,15,18,15,18,60,44,18,18,18},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
			{18,15,18,18,15,15,44,60,18,18,18,18,44,60,18},
		},
		{
			{15,15,44,60,18,15,18,18,44,60,18,15,18,18,18},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
			{18,18,15,18,60,44,15,15,18,18,18,18,15,18,60},
		},
		{
			{15,15,60,44,15,18,18,18,60,44,15,18,18,18,18},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
			{18,18,18,15,44,60,15,15,18,18,18,18,18,15,44},
		},
		{
			{18,18,18,18,18,15,44,60,18,18,18,15,44,60,15},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
			{60,44,15,18,18,18,18,18,15,15,60,44,15,18,18},
		},
	};
	public void GenerateBuildings(int chunkX, int chunkZ){
		Terrain terrain = m_subsystemTerrain.Terrain;
		int x = chunkX * 16;
		int mx = x + 16;
		int z = chunkZ * 16;
		int mz = z + 16;
		int value = 0;
		for (int i = x; i < mx; i++)
		{
			for (int j = z; j < mz; j++)
			{
				int si = TerrainChunk.CalculateCellIndex(i, 0, j);
				for (int k = 0; k < 8; k++)
					terrain.SetCellValueFast(i, j, k, value);
			}
		}
	}
	public void Build(byte[] a, int x, int y){
		Terrain terrain = m_subsystemTerrain.Terrain;
		/*for (int i = x, l = a.Length; i < l; i += x * y)
				for (int j = i / x; j < l / x; j *= y)
						terrainData.SetCellValueFast(i, j, k, a[i]);*/
	}
}
}